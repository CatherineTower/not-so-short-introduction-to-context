%%% File:       b05_Pages.mkiv
%%% Author:     Joaquín Ataz-López
%%% Begun:      May 2020
%%% Concluded:  May 2020
%%% Contents:   This chapter mixes two things: page layout,
%%%            which is the global look of the document, and commands
%%%            relating to pagination which is the particular look and
%%%            and could perhaps be in chapter 11. Its contents
%%%            are mainly based on the 2013 reference manual
%%%            although I also consulted the wiki.

%%% Содержание: В этой главе сочетаются две вещи: макет страницы,
%%% - общий вид документа, а команды
%%% относится к разбивке на страницы, что является конкретным видом и
%%% и, возможно, в главе 11. Его содержание
%%% в основном основаны на справочном руководстве 2013 г.
%%%, хотя я тоже обращался к вики.
%%%
%%%
%%% Edited with: Emacs + AuTeX - And at times with vim + context-plugin
%%%

\environment ../introCTX_env.mkiv

\startcomponent b05_Pages.mkiv

\startchapter
  [
    reference=cap:pages,
    title=Страницы и разбивка документов \\на страницы,
    bookmark=Pages and document pagination,
  ]

\TocChap

\ConTeXt\ преобразует исходный документ в правильно отформатированные {\em страницы}. Как выглядят эти страницы, как распределяются текст и пустые места и какие элементы они содержат -- все это имеет фундаментальное значение для хорошего набора. Эта глава посвящена всем этим вопросам, а также некоторым другим вопросам, связанным с разбиением на страницы.

\startsection
  [
    reference=sec:papersize,
    title=Размер страницы,
  ]

\startsubsection
  [
    reference=sec:pagesize,
    title=Установка размеров страницы,
  ]
\PlaceMacro{setuppapersize}

По умолчанию \ConTeXt\ предполагает, что документы будут иметь размер A4, европейский стандарт. Мы можем установить другой размер с помощью \tex{setuppapersize}, который является {\em нормальной} командой в преамбуле документа. Обычный синтаксис этой команды:

\type{\setuppapersize[LogicalPage][PhysicalPage]}

где оба аргумента принимают символические имена.\footnote{Напомним, что в \in{section}[sec:syntax] я указал, что параметры, принимаемые командами \ConTeXt, в основном бывают двух видов: символьные имена, значение которых уже известно \ConTeXt, или переменная, которой мы должны явно присвоить какое-либо значение.} Первый аргумент, который я назвал {\em LogicalPage}, представляет размер страницы, который следует учитывать при наборе; а второй аргумент {\em PhysicalPage} представляет размер страницы, на которой он будет напечатан. Обычно оба размера одинаковы, поэтому второй аргумент можно не указывать; однако в некоторых случаях два размера могут быть разными, как, например, при печати книги на листах по 8 или 16 страниц (обычная техника печати, особенно для академических книг примерно до 1960-х годов). В этих случаях \ConTeXt\ позволяет нам различать оба размера; и если идея состоит в том, что несколько страниц должны быть напечатаны на одном листе бумаги, мы также можем указать схему складывания, которой необходимо следовать, используя команду \tex{setuparranging} (которая не будет объяснена в этом введении).

Для набора размеров мы можем указать любой из заранее определенных размеров, используемых в бумажной промышленности (или нами самими). Этот список включает:

  \startitemize

  \item Любая из серий A, B и C, определенных ISO-216 (от A0 до A10, от B0 до B10 и от C0 до C10), обычно используется в Европе.

  \item Любой из стандартных размеров US: письмо, бухгалтерская книга, таблоид, юридический, фолио, исполнительный.

  \item Любой из размеров RA и RSA, определенных стандартом ISO-217.

  \item Размеры G5 и E5 определены швейцарским стандартом SIS-014711 (для докторских диссертаций).

  \item Для конвертов: любой из размеров, определенных североамериканским стандартом (от конверта 9 до конверта 14) или стандартом ISO-269 (C6/C5, DL, E4).

  \item CD, для обложек CD.

  \item S3 – S6, S8, SM, SW для размеров экрана в документах, которые не предназначены для печати, но отображаются на экране.

  \stopitemize

Вместе с размером бумаги с помощью \tex{setuppapersize} мы можем указать ориентацию страницы: «книжная» (вертикальная) или «альбомная» (горизонтальная).

\startSmallPrint

Другие параметры, которые разрешает \tex{setuppapersize}, согласно wiki \ConTeXt:\MyKey{rotated}, \MyKey{90}, \MyKey{180}, \MyKey{270}, \MyKey{mirrored} и  \MyKey{negative}. В моих собственных тестах я заметил только некоторые заметные изменения с \MyKey{rotated}, который переворачивает страницу, хотя это не совсем инверсия. Числовые значения должны давать эквивалентную степень вращения, сами по себе или в сочетании с \MyKey{rotated}, но мне не удалось заставить \Doubt их работать. Я не совсем понял, для чего нужны \MyKey{mirrored} и \MyKey{negative}.

\stopSmallPrint

Второй аргумент \tex{setuppapersize}, о котором я уже говорил, можно опустить, если размер печати не отличается от размера набора, может принимать те же значения, что и первый, с указанием размера и ориентации бумаги. Он также может принимать значение \MyKey{oversized} как значение, которое, согласно \ConTeXt\ wiki, добавляет полтора сантиметра к каждому углу листа.

\startSmallPrint

Согласно wiki есть другие возможные значения для второго аргумента: \MyKey{undersized}, \MyKey{doublesized} и \MyKey{doubleoversized}. Но в моих собственных тестах я не заметил никаких изменений после использования любого из них; и в официальном определении команды (см. \in{section}[sec:qrc-setup-en]) эти параметры не упоминаются.

\stopSmallPrint

\stopsubsection

\startsubsection
  [title=Использование нестандартных размеров страниц]

Если мы хотим использовать нестандартный размер страницы, мы можем сделать две вещи:

\startitemize[n]

\item Использовать альтернативный синтаксис \tex{setuppapersize}, который позволяет нам вводить высоту и ширину бумаги как размеры.

\item Определить свой собственный размер страницы, присвоив ему имя и используя его, как если бы это был стандартный размер бумаги.

\stopitemize

\subsubsubject{Альтернативный синтаксис \tex{setuppapersize}}

Помимо синтаксиса, который мы уже видели, \tex{setuppapersize} позволяет нам использовать еще один:

\type{\setuppapersize}[Name][Options]

где {\em Name} -- это необязательный аргумент, который представляет имя, присвоенное размеру бумаги с помощью \tex{definepapersize} (которое мы рассмотрим далее), а {\em Options} относятся к тому типу, в котором мы назначаем явное значение. Среди допустимых вариантов можно выделить следующие:

\startitemize

\item {\tt\bf width, height} которые представляют соответственно ширину и высоту страницы.

\item {\tt\bf страница, бумага}. Первый относится к размеру набираемой страницы, а второй - к размеру страницы, на которой будет печататься физически. Это означает, что \MyKey{page} эквивалентно первому аргументу  \tex{setuppapersize} в его обычном синтаксисе (объяснено выше) и \MyKey{page} второму аргументу. Эти параметры могут принимать значения, указанные ранее (A4, S3 и т.д.).

\item {\tt\bf шкала}, указывает коэффициент масштабирования для страницы.

\item {\tt\bf topspace (верхнее пространство), backspace (нижнее пространство), offset (смещение)}, дополнительные расстояния.

\stopitemize

\subsubsubject{Определение нестандартного размера страницы}

Чтобы определить собственный размер страницы, мы используем команду \tex{definepapersize}, синтаксис которой:

\PlaceMacro{definepapersize}\type{\definepapersize[Name][Options]}

де {\em Name} относится к имени, данному новому размеру, а {\em Options} могут быть:

\startitemize

\item Любое из допустимых значений для \tex{setuppapersize} в его обычном синтаксисе (A4, A3, B5, CD и т.д.).

\item Измерения ширины -- width (бумаги), высоты -- height  (бумаги) и смещения -- offset (смещения) или масштабированного значения (\MyKey{scale}).

\stopitemize

Что невозможно, так это смешивать значения, разрешенные для \tex{setuppapersize}, с измерениями или масштабными коэффициентами. Это связано с тем, что в первом случае параметры являются символическими словами, а во втором - переменными с явным значением; а в \ConTeXt, как я уже сказал, невозможно смешивать оба типа параметров.

Когда мы используем \tex{definepapersize}, чтобы указать размер бумаги, который совпадает с некоторыми стандартными измерениями, на самом деле, вместо того, чтобы определять новый размер бумаги, мы определяем новое имя для уже существующего размера бумаги. Это может быть полезно, если мы хотим совместить размер бумаги с ориентацией. Так, например, мы можем написать

\starttyping
\definepapersize[vertical][A4, portrait]
\definepapersize[horizontal][A4, landscape]
\stoptyping

\stopsubsection

\startsubsection
  [title=Изменение размера страницы в любом месте документа]

В большинстве случаев документы имеют только один размер страницы, поэтому \tex{setuppapersize} -- это типичная команда, которую мы включаем в преамбулу и используем только один раз в каждом документе. Однако в некоторых случаях может потребоваться изменить размер в какой-то момент документа; например, если с определенного момента и далее прилагается приложение, в котором листы альбомные.

В таких случаях мы можем использовать \tex{setuppapersize} именно в том месте, где мы хотим, чтобы изменение произошло. Но поскольку размер изменится немедленно, во избежание неожиданных результатов мы обычно вставляем принудительный разрыв страницы перед \tex{setuppapersize}.

Если нам нужно изменить размер страницы только для отдельной страницы, вместо того, чтобы использовать \tex{setuppapersize} дважды, один раз для изменения на новый размер, а второй -- для возврата к исходному размеру, мы можем использовать \PlaceMacro{adaptpapersize}\tex{adaptpapersize}, который изменяет размер страницы, и, спустя страницу, автоматически сбрасывает значение перед его вызовом. И просто так же, как мы сделали с \tex{setuppapersize}, перед использованием \tex{adappapersize} мы должны вставить принудительный разрыв страницы.

\stopsubsection

\startsubsection
  [title=Настройка размера страницы в соответствии с её содержимым]

В \ConTeXt\ есть три среды, которые генерируют страницы точного размера для хранения их содержимого. Это\PlaceMacro{startMPpage}\tex{startMPpage}, \PlaceMacro{startpagefigure}\tex{startpagefigure} и \PlaceMacro{startTEXpage}\tex{startTEXpage}. Первый генерирует страницу, содержащую графику, сгенерированную с помощью Meta-Post, языка графического дизайна, который интегрируется с \ConTeXt, но который я не буду рассматривать в этом введении. Второй делает то же самое с изображением и, возможно, текстом под ним. Он принимает два аргумента: первый определяет файл, содержащий изображение. Я расскажу об этом в главе, посвященной внешним изображениям. Третий (\tex{startTEXpage}) содержит текст, который является его содержимым на странице. Его синтаксис:

\type{\startTEXpage[Options] ... \stopTEXpage}

где варианты могут быть любыми из следующих:

\startitemize

\item {\tt\bf strut} распорка. Я не уверен в полезности этой опции. В терминологии  \ConTeXt\ {\em strut} - это символ без ширины, но с максимальной высотой и \Doubt глубиной, но я не совсем понимаю, какое это имеет отношение к общей полезности этой команды. Согласно вики, эта опция допускает значения \MyKey{yes}, \MyKey{no}, \MyKey{global} и \MyKey{local}, а значение по умолчанию -- \MyKey{no}.

\item {\tt\bf align} выравнивание. Указывает на выравнивание текста. Оно может быть \MyKey{normal}, \MyKey{flushleft}, \MyKey{flushright}, \MyKey{middle}, \MyKey{high}, \MyKey{low} или \MyKey{lohi}.

\item {\tt\bf offset} смещение, чтобы указать количество пустого пространства вокруг текста. Оно может быть \MyKey{none}, \MyKey{overlay} (наложение), если желателен эффект наложения, или фактическое измерение.

\item {\tt\bf width, height} где мы можем указать ширину и высоту страницы, или значение \MyKey{fit}, чтобы ширина и высота соответствовали тексту, включенному в среду.


\item {\tt\bf frame} рамка, которая по умолчанию \MyKey{off} «выключена», но может принимать значение \MyKey{on} «включено», если нам нужна рамка вокруг текста на странице.


\stopitemize

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:page-elements,
    title=Элементы на странице,
  ]

\ConTeXt\ распознает различные элементы на страницах, размеры которых можно настроить с помощью \tex{setuplayout}. Мы сразу же рассмотрим это, но заранее было бы лучше описать каждый из элементов страницы, указав имя, которое \tex{setuplayout} знает каждый из них:

\startitemize

\item {\bf Edges:} пустое пространство, окружающее текстовую область. Хотя большинство текстовых процессоров называют их \quotation{margins}, предпочтительнее использовать терминологию \ConTeXt, поскольку она позволяет нам различать края как таковые, где нет текста (хотя в электронных документах могут быть кнопки навигации и тому подобное), и поля, где иногда могут располагаться определенные текстовые элементы, такие как, например, примечания на полях.

  \startitemize

 \item Высота верхнего края контролируется двумя измерениями: самим верхним краем ((\MyKey{top} «верх») и расстоянием между верхним краем и заголовком (\MyKey{topdistance} «расстояние до верха»). Сумма этих двух измерений называется \MyKey{topspace} «верхним пространством».

  \item Размер левого и правого краев зависит от измерений  \MyKey{leftedge} \MyKey{rightedge} -- «левого края» и «правого края» соответственно. Если мы хотим, чтобы оба были одинаковой длины, мы можем настроить их одновременно с помощью опции \MyKey{edge}.

В документах, предназначенных для двусторонней печати, мы говорим не о левом и правом краях, а о внутреннем и внешнем; первый - край, ближайший к точке, где листы будут сшиваться или сшиваться, то есть левый край на страницах с нечётными номерами и правый край на страницах с чётными номерами.
Внешний край противоположен внутреннему.

  \item Высота нижнего края называется \MyKey{bottom} (дно).

  \stopitemize

  % В документах, предназначенных для печати на бумаге, края никогда не могут содержать текст. Но в документах, предназначенных для отображения на экране, края могут содержать некоторые элементы, такие как кнопки навигации и тому подобное.

\item {\bf Margins} (поля) собственно так называемые. \ConTeXt\ вызывает только боковые поля (левое и правое). Поля расположены между краем и основной текстовой областью и предназначены для размещения определенных текстовых элементов, таких как, например, заметки на полях, заголовки разделов или их номера.

Размеры, определяющие размер поля:

  \startitemize

  \item {\tt\bf margin}: используется, когда мы хотим одновременно установить одинаковый размер полей.

  \item {\tt\bf leftmargin, rightmargin}: установите размер левого и правого полей соответственно.

  \item {\tt\bf edgedistance}: расстояние между краем и полем.

  \item {\tt\bf leftedgedistance, rightedgedistance}: расстояние между краем и левым и правым полями соответственно.

  \item {\tt\bf margindistance}: расстояние между полем и основной текстовой областью.

  \item {\tt\bf leftmargindistance, rightmargindistance}: расстояние между основной текстовой областью и правым и левым полями соответственно.

  \item {\tt\bf backspace}: это измерение представляет собой пространство между левым углом листа и началом основной текстовой области. Следовательно, он состоит из суммы \MyKey{leftedge} + \MyKey{leftedgedistance} + \MyKey{leftmargin} + \MyKey{leftmargindistance}.

  \stopitemize

\item {\bf Header and footer}: верхний и нижний колонтитулы страницы - это две области, которые расположены, соответственно, в верхней или нижней части письменной области страницы. Обычно они содержат информацию, которая помогает контекстуализировать текст, например номер страницы, имя автора, название работы, название главы или раздела и т.д. В  \ConTeXt\ на эти области на странице влияют следующие параметры:

  \startitemize

  \item {\tt\bf header}: высота заголовка.

  \item {\tt\bf footer}: высота нижнего колонтитула.

  \item {\tt\bf headerdistance}: расстояние между заголовком и основной текстовой областью страницы.

  \item {\tt\bf footerdistance}: расстояние между нижним колонтитулом и основной текстовой областью страницы.

  \item {\tt\bf topdistance, bottomdistance}: оба упомянутых ранее. Это расстояние между верхним краем и заголовком или нижним краем и нижним колонтитулом соответственно.

  \stopitemize

\item {\bf Main text area} (Область основного текста): это самая широкая область на странице, содержащая текст документа. Его размер зависит от переменных \MyKey{width} (ширина) и \MyKey{textheight} (высота текста). В свою очередь, переменная \MyKey{height} измеряется как сумма \MyKey{header}, \MyKey{headerdistance}, \MyKey{textheight}, \MyKey{footerdistance} и \MyKey{footer}.

 \stopitemize

\placefigure
  [here]
  [img:page layout]
  {Области и измерения на странице}
  {\externalfigure[PageLayout.png][width=.8\textwidth]}

Мы можем видеть все эти области на \in{image}[img:page layout] вместе с названиями соответствующих измерений и стрелками, указывающими их протяженность. Толщина стрелок вместе с размером названий стрелок призваны отражать важность каждого из этих расстояний для макета страницы. Если мы присмотримся, то увидим, что это изображение показывает, как страница может быть представлена в виде таблицы с 9 строками и 9 столбцами, или, если мы не принимаем во внимание значения разделения между различными областями, будет пять строк и пять столбцов, из которых текст может быть только в трех строках и трех столбцах. Пересечение средней строки со средним столбцом составляет основную текстовую область и обычно занимает большую часть страницы.

На этапе макета нашего документа мы можем увидеть все размеры страницы с помощью \PlaceMacro{showsetups}\tex{showsetups}. Чтобы увидеть основные схемы распределения текста, визуально отображаемые на странице, мы можем использовать\PlaceMacro{showframe}\tex{showframe}; а с\PlaceMacro{showlayout}\tex{showlayout} мы можем получить комбинацию двух предыдущих команд.

\stopsection

\startsection
  [
    reference=sec:pagelayout,
    title=Макет страницы (\tex{setuplayout}),
  ]
\PlaceMacro{setuplayout}

\startsubsection
  [
    reference=sec:setuplayout,
    title=Назначение размера различным компонентам страницы,
  ]

Дизайн страницы предполагает присвоение определенных размеров соответствующим областям страницы. Это делается с помощью \tex{setuplayout}. Эта команда позволяет нам изменять любые размеры, упомянутые в предыдущем разделе. Его синтаксис следующий:

\type{\setuplayout [Name] [Options]}

где {\em Name} -- необязательный аргумент, используемый только в том случае, когда мы разработали несколько макетов (см. \in{section}[sec:definelayout]), а параметры, помимо других, которые мы увидим позже, включают любые из ранее упомянутых измерений. Однако имейте в виду, что эти измерения взаимосвязаны, поскольку сумма компонентов, влияющих на ширину, из компонентов, влияющих на высоту, должна совпадать с шириной и высотой страницы. В принципе это будет означать, что при изменении длины по горизонтали мы должны отрегулировать оставшиеся длины по горизонтали; и то же самое при регулировке длины по вертикали.

По умолчанию \ConTeXt\ выполняет автоматическую корректировку размеров только в некоторых случаях, которые, с другой стороны, не указаны полным или систематическим образом в его документации. Проведя несколько тестов, я смог убедиться, например, что ручное увеличение или уменьшение высоты верхнего или нижнего колонтитула влечет за собой корректировку \MyKey{textheight}; однако ручное изменение некоторых полей не приводит к автоматической настройке (согласно моим тестам) ширины текста (\MyKey{width}). Вот почему наиболее эффективный способ избежать несоответствия между размером страницы (установленным с помощью \tex{setuppapersize)} и размером соответствующих компонентов:

\startitemize

\item Относительно горизонтальных измерений:

  \startitemize

  \item Регулируя \MyKey{backspace} (что включает \MyKey{leftedge}
  и \MyKey{leftmargin}).

  \item Регулируя \MyKey{width} (text width) не с размерами, а со значениями \MyKey{fit} \MyKey{middle}:

    \startitemize

    \item {\tt fit} вычисляет ширину текста на основе ширины остальных горизонтальных компонентов страницы.

    \item {\tt middle} делает то же самое, но сначала выравнивает правое и левое поля.

    \stopitemize

  \stopitemize

\item Относительно вертикальных измерений:

  \startitemize

  \item Регулируя «верхнее пространство» \MyKey{topspace}.

  \item Регулируя значения \MyKey{fit} или \MyKey{middle} к «высоте» \MyKey{height}. Они работают так же, как и в случае ширины. Первый вычисляет высоту на основе остальных компонентов, а второй сначала выравнивает верхнее и нижнее поля, а затем вычисляет высоту текста.

  \item После настройки \MyKey{height}, при необходимости отрегулировав высоту верхнего или нижнего колонтитула, зная, что в таких случаях \MyKey{textheight} будет автоматически изменена.

  \stopitemize

\item Другой возможностью косвенного определения высоты основной текстовой области является указание количества строк, которые должны уместиться в ней (с учетом текущего межстрочного пространства и размера шрифта). Вот почему \tex{setuplayout} включает параметр \MyKey{lines}.

\stopitemize

\subsubsubject{Размещение логической страницы на физической странице}

В случае, когда размер логической страницы не совпадает с размером физической страницы (см. в \in{section}[sec:pagesize]) \tex{setuplayout} позволяет нам настроить некоторые дополнительные параметры, влияющие на размещение логической страницы на физической странице:

\startitemize

\item {\tt\bf location} (расположение): этот параметр определяет место, где страница будет размещена на физической странице. Возможные значения: left (левый), middle (средний), right (правый), top (верх), bottom (низ), singlesided (односторонний), doublesided или duplex (двусторонний).

\item {\tt\bf scale}: указывает коэффициент масштабирования для страницы перед ее размещением на физической странице.

\item {\tt\bf marking}: будет печатать визуальные метки на странице, указывающие, где бумага должна быть обрезана.

\item {\tt\bf horoffset, veroffset, clipoffset, cropoffset, trimoffset, bleedoffset, artoffset}: серия измерений, указывающих различные смещения на физической странице. Большинство из них объясняется в справочном руководстве 2013 года.

\stopitemize

Эти параметры \tex{setuplayout} должны сочетаться с указаниями из \tex{setuparranging}, которые показывают, как логические страницы должны быть упорядочены на физическом листе бумаги. Я не буду объяснять эти команды в этом введении, так как я не проводил с ними никаких тестов.

\subsubsubject{Получение ширины и высоты текстовой области}

Команды \PlaceMacro{textwidth}\tex{textwidth} и \PlaceMacro{textheight}\tex{textheight} возвращают ширину и высоту текстовой области соответственно. Значения, предлагаемые этими командами, не могут быть напрямую показаны в окончательном документе, но их можно использовать для других команд, чтобы установить их ширину или высоту. Так, например, чтобы указать, что нам нужно изображение, ширина которого будет составлять 60\% от ширины линии, нам нужно указать в качестве значения параметра \MyKey{width} изображения:  \MyKey{width=0.6\backslash textwidth}.

\stopsubsection

\startsubsection
  [title=Адаптация макета страницы]
\PlaceMacro{adaptlayout}

Может случиться так, что макет нашей страницы на определенной странице дает нежелательный результат; как, например, последняя страница главы, состоящая всего из одной или двух строк, что нежелательно ни с типографской, ни с эстетической точки зрения. Чтобы решить эти проблемы, \ConTeXt\ предоставляет команду \tex{adaplayout}, которая позволяет нам изменять размер текстовой области на одной или нескольких страницах. Эта команда предназначена для использования только тогда, когда мы уже закончили писать наш документ и вносим некоторые небольшие окончательные корректировки. Поэтому его естественное расположение - в преамбуле документа.
Синтаксис команды:

\type{\adaptlayout [Pages] [Options]}

где {\em Pages} означает номер страницы или страниц, макет которых мы хотим изменить. Это необязательный аргумент, который следует использовать только тогда, когда в преамбуле помещается \tex{adaplayout}. Мы можем указать как одну страницу, так и несколько страниц, разделяя числа запятыми. Если мы опустим этот первый аргумент, \tex{adaplayout} будет влиять исключительно на страницу, на которой он находит команду.

Что касается вариантов, то они могут быть:

\startitemize

\item {\tt\bf height}: позволяет указать в качестве размеров высоту, которую должна иметь рассматриваемая страница. Мы можем указать абсолютную высоту (например, «19 см») или относительную высоту (например, «+1 см», «-0,7 см»).

\item {\tt\bf lines}: мы можем включить количество строк для добавления или вычитания. Для добавления строк перед значением стоит знак +, а для вычитания строк -- знак $-$ (а не просто дефис).

\stopitemize

Учтите, что изменение количества строк на странице может повлиять на разбиение на страницы остальной части документа, поэтому рекомендуется использовать \tex{adaplayout} только в конце, когда в документе не будет дальнейших изменений, и сделать это в преамбуле. Затем мы переходим к первой странице, которую хотим адаптировать, делаем это и проверяем, как она влияет на последующие страницы; если это повлияет на него так, что другая страница нуждается в адаптации, мы добавляем её номер и компилируем еще раз, и так далее.

\stopsubsection

\startsubsection
  [
    reference=sec:definelayout,
    title=Использование нескольких макетов страниц,
  ]
\PlaceMacro{definelayout}

Если нам нужно использовать разные макеты в разных частях документа, лучше всего начать с определения {\em общего} макета, а затем различных альтернативных, тех, которые изменяют только те размеры, которые должны отличаться. Эти альтернативные макеты унаследуют все функции общего макета, которые не изменятся как часть его определения. Чтобы указать альтернативный макет и дать ему имя, которое мы позже сможем назвать, мы используем команду \tex{definelayout}, общий синтаксис которой:

\type{\definelayout [Name/Number] [Configuration]}

где {\em Name/Number} - это имя, связанное с новым дизайном, или номер страницы, на которой новый макет будет автоматически активирован, а {\em Configuration} будет содержать аспекты макета, которые мы хотим изменить по сравнению с общим макетом.

Когда новый макет связан с именем, чтобы вызвать его в определенном месте в документе, который мы используем:

\type{\setuplayout [LayoutName]}

и вернуться к общему виду:

\type{\setuplayout [reset]}

Если, с другой стороны, новый макет был связан с определенным номером страницы, он будет автоматически активирован при достижении страницы. Однако после активации, чтобы вернуться к общему дизайну, нам нужно будет явно указать это, даже если мы можем {\em полуавтоматизировать} это. Например, если мы хотим применить макет исключительно к страницам 1 и 2, мы можем написать в преамбуле документа:



\starttyping
\definelayout[1][...]
\definelayout[3][reset]
\stoptyping

Эффект этих команд будет заключаться в том, что макет, определенный в первой строке, активируется на странице 1, а на странице 3 активируется другой макет, функция которого заключается только в возврате к общему макету.

С помощью \tex{definelayout[even]} мы создаем макет, который активируется на всех чётных страницах; а с \tex{definelayout[odd]} макет будет применен ко всем нёчетным страницам.

\stopsubsection

\startsubsection
  [
    reference=sec:pages-other-matters,
    title={Прочие вопросы, связанные с макетом страницы}
  ]

\startsubsubsection
  [
    reference=sec:double-sided,
    title= Различение нёчетных и чётных страниц
  ]

В двусторонних печатных документах часто бывает, что верхний колонтитул, нумерация страниц и боковые поля различаются между чётными и нечётными страницами. Страницы с чётными номерами также называются левыми (оборотными) страницами, а нечётными страницами -- правыми (лицевыми) страницами. В этих случаях также обычно меняется терминология, касающаяся полей, и мы говорим о внутренних и внешних полях. Первый расположен в ближайшей точке к тому месту, где страницы будут сшиты или скреплены, а второй-на противоположной стороне. На нечётных страницах внутреннее поле соответствует левому полю, а на чётных страницах внешнее поле соответствует правому полю.


\tex{setuplayout} не имеет опции, прямо позволяющей нам указать, что мы хотим различать макет для четных и нечетных страниц. Это связано с тем, что для \ConTeXt\ разница между обоими типами страниц устанавливается с помощью другого параметра: \tex{setuppagenumbering}, который мы увидим в \in{section}[sec:numpages]. Как только это будет установлено, \ConTeXt\ предполагает, что страница, описанная с помощью \tex{setuplayout}, была нечётной, и строит чётную страницу, применяя к ней инвертированные значения для нёчетной страницы: спецификации, применимые к нечётной странице, применяются к левой части, на чётной странице они применяются справа; и наоборот: те, которые применимы на странице с нечётным номером справа, применяются к странице с чётным номером слева.

\stopsubsubsection

\startsubsubsection
  [
    reference=sec:pages-columns,
    title=Страницы с более чем одним столбцом,
  ]

С помощью \tex{setuplayout} мы также можем видеть, что текст нашего документа распределен по двум или более столбцам, как это делают, например, газеты и некоторые журналы. Это контролируется опцией \MyKey{columns}, значение которой должно быть целым числом. Когда имеется более одного столбца, расстояние между столбцами указывается опцией \MyKey{columndistance}.

Этот параметр предназначен для документов, в которых весь текст (или большая его часть) распределен по нескольким столбцам. Если в документе, который в основном представляет собой документ с одним столбцом, мы хотим, чтобы конкретная часть состояла из двух или трех столбцов, нам не нужно изменять макет страницы, а просто использовать среду \MyKey{columns} (см. \in{section}[sec:multiplecolumns]).

\stopsubsubsection

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:numpages,
    title=Нумерация страниц,
  ]

По умолчанию \ConTeXt\ использует арабские числа для нумерации страниц, и номер отображается в центре заголовка. Чтобы изменить эти функции, \ConTeXt\ использует другие процедуры, которые, на мой взгляд, делают его излишне сложным, когда дело касается этого вопроса.

Во-первых, основные характеристики нумерации контролируются двумя разными командами:

\PlaceMacro{setuppagenumbering}\tex{setuppagenumbering} и \PlaceMacro{setupuserpagenumber}\tex{setupuserpagenumber}.

\type{\setuppagenumbering} доступны следующие опции:

\startitemize

\item {\tt\bf alternative}: этот параметр определяет, спроектирован ли документ таким образом, чтобы верхний и нижний колонтитулы были идентичными на всех страницах (\MyKey{singlesided} «односторонние»), или же они различают чётные и нечётные страницы (\MyKey{doublesided} «двусторонние»). Когда эта опция принимает последнее значение, автоматически изменяются значения макета страницы, введенные \MyKey{setup\-layout}, поэтому предполагается, что то, что указано в \MyKey{setup\-layout} относится только к страницам с нечётными номерами, и поэтому то, что расположено для левого поля, фактически относится к внутреннему полю (которое на страницах с чётными номерами находится справа), а то, что расположено для правой стороны, фактически относится к внешнему полю, которое на чётных страницах находится слева.

\item {\tt\bf state}: указывает, будет ли отображаться номер страницы. Он допускает два значения: начало (будет отображаться номер страницы) и стоп (номера страниц будут подавлены). Название этих значений (start и stop) может заставить нас думать, что когда у нас есть \MyKey{state=stop}, страницы перестают нумероваться, а когда \MyKey{state=start} нумерация начинается снова. Но это не так: эти значения влияют только на то, отображается номер страницы или нет.

\item {\tt\bf location} (расположение): указывает, где он будет отображаться. Обычно нам нужно указать в этой опции два значения, разделенных запятой. Прежде всего, нам нужно указать, хотим ли мы, чтобы номер страницы был в верхнем (\MyKey{header}) или в нижнем колонтитуле (\MyKey{footer}), а затем, где в верхнем или нижнем колонтитуле: это может быть  \MyKey{left}, \MyKey{middle}, \MyKey{right}, \MyKey{inleft}, \MyKey{inright}, \MyKey{margin}, \MyKey{inmargin}, \MyKey{atmargin} или \MyKey{marginedge}. Например: чтобы выровнять нумерацию по правому краю в нижнем колонтитуле, мы должны указать \MyKey{location=\{footer,right\}}. С другой стороны, посмотрите, как мы заключили этот параметр в фигурные скобки, чтобы \ConTeXt\ мог правильно интерпретировать разделительную запятую.

\item {\tt\bf style}: указывает размер и стиль шрифта, которые будут использоваться для номеров страниц.

\item {\tt\bf color}: указывает цвет, который будет применен к номеру страницы.

\item {\tt\bf left}: выбирает команду или текст для выполнения слева от номера страницы.

\item {\tt\bf right}:выбирает команду или текст для выполнения справа от номера страницы.

\item {\tt\bf command}: выбирает команду, которой будет передан номер страницы в качестве параметра.

\item {\tt\bf width}: указывает ширину, занимаемую номером страницы.

\item {\tt\bf strut}: Я не уверен в этом. В моих тестах, когда \MyKey{strut=no}, число печатается точно по верхнему краю заголовка или внизу нижнего колонтитула, тогда как при \MyKey{strut=yes} (значение по умолчанию) -- между номером и краем.

\stopitemize

\type{\setupuserpagenumber}, позволяет эти дополнительные параметры:

\startitemize

\item {\tt\bf numberconversion -- преобразование чисел}: управляет типом нумерации, которая может быть арабской (\MyKey{n}, \MyKey{numbers}), строчными буквами  (\MyKey{a}, \MyKey{characters}), прописными буквами (\MyKey{A},\MyKey{Characters}), строчными заглавными буквами (\MyKey{KA}), римскими строчными буквами (\MyKey{i}, \MyKey{r}, \MyKey{romannumerals}), латинскими буквами в верхнем регистре  (\MyKey{I}, \MyKey{R},
\MyKey{Romannumerals}) или прописные римские символы (\MyKey{KR}).

\item {\tt\bf number}: указывает номер, который нужно присвоить первой странице, на основе которого будет рассчитываться оставшаяся часть.

\item {\tt\bf numberorder}: если мы присвоим этому параметру значение \MyKey{reverse}, нумерация страниц будет в порядке убывания; это означает, что на последней странице будет 1, на предпоследней - 2 и т.д.

\item {\tt\bf way}: позволяет нам указать, как будет проходить нумерация. Это может быть: по блокам, по главам, по разделам, по подразделам и т.д.

\item {\tt\bf prefix}: позволяет указывать префикс к номерам страниц.

\item {\tt\bf numberconversionset}: Объясняется далее.

\stopitemize

В дополнение к этим двум командам также необходимо принять во внимание контроль чисел, связанных с макроструктурой документа \in{section}[sec:macrostructure]). С этой точки зрения \PlaceMacro{defineconversionset}\tex{defineconversionset} позволяет нам указывать разные виды нумерации для каждого из блоков макроструктуры. Например:

\vbox{\starttyping
\defineconversionset
  [frontpart:pagenumber][][romannumerals]

\defineconversionset
  [bodypart:pagenumber][][numbers]

\defineconversionset
  [appendixpart:pagenumber][][Characters]

\stoptyping}

увидим, что первый блок в нашем документе (frontmatter) пронумерован строчными римскими числами, центральный блок (bodymatter) -- арабскими числами, а приложения -- прописными буквами.

Мы можем использовать следующие команды, чтобы получить номер страницы:

\startitemize

\item \PlaceMacro{userpagenumber}\tex{userpagenumber}: возвращает номер страницы в том виде, в котором он был настроен с помощью \tex{setuppagenumbering} и \tex{setupuserpagenumber}.

\item \PlaceMacro{pagenumber}\tex{pagenumber}: возвращает то же число, что и предыдущая команда, но все еще в арабских числах.

\item \PlaceMacro{realpagenumber}\tex{realpagenumber}: возвращает действительный номер страницы арабскими цифрами без учета этих характеристик.

\stopitemize

Для получения номера последней страницы в документе есть три команды, параллельные предыдущим. Это:
\PlaceMacro{lastuserpagenumber}\tex{lastuserpagenumber}, \PlaceMacro{lastpagenumber}\tex{lastpagenumber}
и \PlaceMacro{lastrealpagenumber}\tex{lastrealpagenumber}.

\stopsection

\startsection
  [title=Принудительные или предлагаемые разрывы страниц]

\startsubsection
  [title=Команда \tex{page}]
\PlaceMacro{page}

Алгоритм распределения текста в  \ConTeXt\ довольно сложен и основан на множестве вычислений и внутренних переменных, которые сообщают программе, где лучше всего вводить разрыв страницы с точки зрения типографской правильности. Команда \tex{page} позволяет нам влиять на этот алгоритм:

\startitemize[a]

\item Предлагая определенные моменты как лучшее или самое неподходящее место для включения разрыва страницы.

  \startitemize[packed]

  \item {\tt\bf no}: указывает, что место, где расположена команда, не является подходящим кандидатом для вставки разрыва страницы, поэтому, по возможности, разрыв должен быть сделан в другом месте документа.

  \item {\tt\bf preference}: сообщает  \ConTeXt, что точка, в которой он встречает команду, является {\em хорошим местом} для попытки разрыва страницы, хотя он и не заставит его там.

  \item {\tt\bf bigpreference}: указывает, что точка, в которой он сталкивается с командой, является {\em очень хорошим местом} для попытки разрыва страницы, но это тоже не доходит до ее принудительного выполнения.

  \stopitemize

Обратите внимание, что эти три параметра не вызывают и не предотвращают разрывы страниц, а только сообщают \ConTeXt, что при поиске лучшего места для разрыва страницы следует учитывать то, что указано в этой команде. Однако в последнем случае место, где произойдет разрыв страницы, по-прежнему будет определяться \ConTeXt.

\item Путем принудительного разрыва страницы в определенном месте; в этом случае мы также можем указать, сколько должно быть разрывов страниц, а также определенные особенности страниц, которые нужно вставить.

  \startitemize[packed]

  \item {\tt\bf yes}: принудительный разрыв страницы в этой точке.

  \item {\tt\bf makeup}: аналогично \MyKey{yes}, но принудительный разрыв происходит немедленно, без предварительного размещения каких-либо плавающих объектов, размещение которых ожидается (см. \in{section}[sec:floating objects]).

  \item {\tt\bf empty}: вставить в документ полностью пустую страницу.

  \item {\tt\bf even}: вставьте столько страниц, сколько необходимо, чтобы следующая страница стала чётной.

  \item {\tt\bf odd}: вставить столько страниц, сколько необходимо, чтобы следующая страница была нечётной.

  \item {\tt\bf left, right}: аналогично двум предыдущим параметрам, но применимо только к двусторонним печатным документам, с разными верхними, нижними колонтитулами или полями в зависимости от того, чётная или нечётная страница.

  \item {\tt\bf quadruple}: введите количество страниц, необходимое для того, чтобы следующая страница была кратна 4.


\stopitemize

\stopitemize

Наряду с этими параметрами, которые конкретно управляют разбиением на страницы, \tex{page} включает другие параметры, которые влияют на работу этой команды. В частности, параметр \MyKey{disable} «отключить», который заставляет \ConTeXt\ игнорировать команды \tex{page}, которые он находит оттуда, и параметр \MyKey{reset}, который производит противоположный эффект, восстанавливая эффективность будущих команд \tex{page}.

\stopsubsection

\startsubsection
  [title=Соединение определенных строк или абзацев для предотвращения вставки между ними разрыва страницы]

Иногда, если мы хотим предотвратить разрыв страницы между несколькими абзацами, использование команды \tex{page} может быть трудоёмким, поскольку её придется писать в каждой точке, где можно было вставить разрыв страницы. Более простая процедура для этого -- поместить материал, который мы хотим сохранить, на той же странице в то, что \TeX\ называет  {\em вертикальным боксом}.

\startSmallPrint

В начале этого документа (на \at{page}[ref:boxes]) я указал, что внутри всё является {\em боксом} для \TeX. Понятие бокса является фундаментальным в \TeX\ для любых {\em сложных} операций; но управление им слишком сложно, чтобы включать его в это введение. Вот почему я лишь изредка упоминаю боксы.

 \stopSmallPrint

После создания блоки \TeX\ неделимы, что означает, что мы не можем вставить разрыв страницы, который разделил бы блок пополам. Вот почему, если мы помещаем материал, который хотим хранить вместе, в невидимый бокс, мы избегаем вставки разрыва страницы, которая могла бы разделить этот материал. Для этого используется команда  \PlaceMacro{vbox}\tex{vbox}, синтаксис которой

\type{\vbox{Material}}

где {\em Material} - это текст, который мы хотим сохранить вместе.


Некоторые среды  \ConTeXt\ действительно помещают свое содержимое в бокс. Например, \MyKey{framedtext}, поэтому, если мы создадим рамку для материала, который хотим сохранить вместе в этой среде, а также увидим, что рамка невидима (что мы делаем с опцией {\tt frame=off}), мы добьёмся того же.

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:headerfooter,
    title=Верхние и нижние колонтитулы,
  ]

\startsubsection
  [title=Команды для определения содержимого верхних и нижних колонтитулов]
\PlaceMacro{setupheadertexts}\PlaceMacro{setupfootertexts}

Если мы присвоили определенный размер верхнему и нижнему колонтитулам в макете страницы, мы можем включить в них текст с помощью команд \tex{setupheadertexts} и \tex{setupfootertexts}. Эти две команды похожи, с той лишь разницей, что первая активирует содержимое заголовка, а вторая - содержимое нижнего колонтитула. У обоих от одного до пяти аргументов.

\startitemize[n]

\item Используемый с одним аргументом, он будет содержать текст верхнего или нижнего колонтитула, который будет помещен в центр страницы. Например: \tex{setupfootertexts[pagenumber]} напишет номер страницы в центре нижнего колонтитула.

\item При использовании с двумя аргументами содержимое первого аргумента будет размещено в левой части верхнего или нижнего колонтитула, а содержание второго аргумента - в правой части. Например, \tex{setupheadertexts[Preface][pagenumber]} наберёт заголовок страницы, в котором слово «предисловие» написано с левой стороны, а номер страницы напечатан с правой стороны.

\item Если мы используем три аргумента, первый будет указывать {\em область}, в которой должны быть напечатаны два других. Под {\em областью} я имею в виду области страницы, упомянутые в \in{section}[sec:page-elements], другими словами: край, поле, заголовок ... Два других аргумента содержат текст, который должен быть помещен в левый край, поле и правый край, поле.

\stopitemize

Использование его с четырьмя или пятью аргументами эквивалентно использованию его с двумя или тремя аргументами в тех случаях, когда проводится различие между чётными и нечётными страницами, что, как мы знаем, происходит, когда установлено «alternate=doublesided» с \tex{setuppagenumbering}. В этом случае добавляются два возможных аргумента, чтобы отразить содержимое левой и правой сторон чётных страниц.

Важной характеристикой этих двух команд является то, что когда они используются с двумя аргументами, предыдущий центральный верхний или нижний колонтитул (если он существовал) не перезаписывается, что позволяет нам писать другой текст в каждой области, если мы сначала напишем центральный текст (вызов команды с одним аргументом), а затем напишем тексты для любой стороны (вызовите его снова, теперь с двумя аргументами). Так, например, если мы напишем следующие команды

\starttyping
\setupheadertexts[and]
\setupheadertexts[Tweedledum][Tweedledee]
\stoptyping

Первая команда напишет \quotation{and} в центре заголовка, а вторая напишет \quotation{Tweedledum} слева и \quotation{Tweedledee} справа, оставляя центральную область нетронутой, так как её не было приказано переписывать. Результирующий заголовок теперь будет отображаться как

\color[maincolor] {Tweedledum\hfill and\hfill Tweedledee}

\startSmallPrint

Только что приведенное мной объяснение работы этих команд является моим заключением после многих тестов. Объяснение этих команд, приведенное в обзоре \ConTeXt {\em excursion}, основано на версии с пятью аргументами; а тот, что в справочном руководстве 2013 г., основан на версии с тремя аргументами. Я думаю, что моя \Conjecture яснее. С другой стороны, я не видел объяснения, почему второй вызов команды не перезаписывает предыдущий вызов, но вот как это работает, если мы сначала напишем центральный элемент в верхнем или нижнем колонтитуле, а затем - по обе стороны. Но если мы сначала напишем элементы с любой стороны в верхнем или нижнем колонтитуле, последующий вызов команды для записи центрального элемента удалит предыдущие верхние или нижние колонтитулы. Почему? Я понятия не имею. Я думаю, что эти мелкие детали вносят ненужное усложнение и должны быть чётко объяснены в официальной документации.

\stopSmallPrint

Более того, мы можем указать любую комбинацию текста и команд как фактическое содержимое верхнего или нижнего колонтитула. Но также следующие значения:

\startitemize

\item {\tt\bf date, currentdate}: запишет (любую из них) текущую дату.

\item {\tt\bf pagenumber}: напишет номер страницы.

\item {\tt\bf part, chapter, section...}: напишет заголовок, соответствующий части, главе, разделу ... или любому другому структурному подразделению.

\item {\tt\bf partnumber, chapternumber, sectionnumber...}: запишет номер части, главы, раздела ... или любого другого структурного подразделения.


\stopitemize

 {\bf Внимание}: эти символические имена ({\tt дата, текущая дата, номер страницы, глава, номер главы} и т.д.) интерпретируются как таковые только в том случае, если само символическое имя является единственным содержанием аргумента; но если мы добавим другой текст или команду форматирования, эти слова будут интерпретироваться буквально, и поэтому, например, если мы напишем \tex{setupheadertexts[chapternumber]}, мы получим номер текущей главы; но если мы напишем tex{setupheadertexts[{Chapter chapternumber}]}, мы получим: \quotation{Chapter~chapternumber}. В этих случаях, когда содержание команды не является просто символическим словом, мы должны:

  \startitemize

  \item Для {\tt date, currentdate} и {\tt pagenumber} использовать не символическое слово, а команду с тем же именем (\tex{date}, \tex{currentdate} или \PlaceMacro{pagenumber}\tex{pagenumber}).


  \item Для {\tt part, partnumber, chapter, chapternumber} и т.д. использовать команду \PlaceMacro{getmarking}\tex{getmarking[Mark]}, которая возвращает содержание {\em Mark}. Так, например, \tex{getmarking[chapter]} вернет заголовок текущей главы, а \tex{getmarking[chapternumber]} вернет номер текущей главы.

  \stopitemize

Чтобы отключить верхние и нижние колонтитулы на определенной странице, используйте команду \PlaceMacro{noheaderandfooterlines}\tex{noheaderandfooterlines}, которая действует исключительно на странице, на которой она расположена. Если мы хотим удалить только номер страницы на определенной странице, мы должны использовать команду \tex{page[blank]}.

 \stopsubsection

\startsubsection
  [title=Форматирование верхних и нижних колонтитулов]
\PlaceMacro{setupheader}\PlaceMacro{setupfooter}

Конкретный формат, в котором отображается текст верхнего или нижнего колонтитула, может быть указан в аргументах для \tex{setupheadertexts} или \tex{setupfootertexts} с помощью соответствующих команд форматирования. Однако мы также можем настроить это глобально с помощью \tex{setupheader} и \tex{setupfooter}, которые позволяют использовать следующие параметры:

\startitemize

\item {\tt\bf state}: допускает следующие значения: {\tt start, stop, empty, high, none, normal} или {\tt nomarking}.

\item {\tt\bf style, leftstyle, rightstyle}: настройка стиля текста верхнего и нижнего колонтитула. {\tt style} влияет на все страницы: {\tt leftstyle} левый стиль -- чётные страницы и {\tt rightstyle} правый -- нечётный.

\item {\tt\bf color, leftcolor, rightcolor}: цвет верхнего или нижнего колонтитула. Это может повлиять на все страницы (вариант {\tt color}) или только на чётные страницы ({\tt leftcolor}) или нечётные страницы ({\tt rightcolor})

\item {\tt\bf width, leftwidth, rightwidth}: ширина всех верхних и нижних колонтитулов ({\tt leftwidth}) или верхних / нижних колонтитулов на чётных страницах ({\tt leftwidth}) или нечётных ({\tt rightwidth}).

\item {\tt\bf before}: команда, выполняемая перед написанием верхнего или нижнего колонтитула.

\item {\tt\bf after}: команда, выполняемая после написания верхнего или нижнего колонтитула.

\item {\tt\bf strut}: если \quotation{yes}, между заголовком и краем устанавливается вертикальное разделительное пространство. Если установлено \quotation{no}, верхний или нижний колонтитул упирается в края областей верхнего или нижнего края.

\stopitemize

% \subsection{Текст в верхнем и нижнем краях}
%
% Если мы вспомним, что я объяснял в \in{section}[sec:elementospag] относительно элементов страницы, я сказал, что верхний и нижний края страницы ({\tt top} и {\tt bottom} в терминологии \ConTeXt) в принципе не должны содержать текста. Однако это не является абсолютным правилом, поскольку, в основном, в электронных документах, предназначенных для отображения на экране, может быть полезно включить некоторые текстовые элементы в эти области. Вот почему \ConTeXt\ позволяет использовать в них текстовое содержимое

\stopsubsection

\startsubsection
  [title=Определение конкретных верхних и нижних колонтитулов и связывание их с командами раздела]
\PlaceMacro{definetext}

Система верхнего и нижнего колонтитула \ConTeXt\ позволяет нам автоматически изменять текст в верхнем или нижнем колонтитуле, когда мы меняем главы или разделы; или когда мы меняем страницы, если мы установили разные верхние или нижние колонтитулы для нечётных и чётных страниц. Но что он не позволяет, так это различать первую страницу (документа, главы или раздела) и остальные страницы. Для достижения последнего мы должны:

\startitemize[n, packed]

\item Определить конкретный верхний или нижний колонтитул.
\item Связать его с разделом, к которому он относится.

\stopitemize

Определение конкретных верхних или нижних колонтитулов выполняется с помощью команды \tex{definetext}, синтаксис которой:

\vbox{\starttyping
\definetext
  [Name] [Type]
  [Content1] [Content2] [Content3]
  [Content4] [Content5]
\stoptyping}

где {\em Name} -- это имя, присвоенное верхнему или нижнему колонтитулу, с которым мы имеем дело; {\em Type} может быть верхний {\tt header} или нижний {\tt footer} колонтитул, в зависимости от того, какой из двух мы определяем, а оставшиеся пять аргументов содержат содержимое, которое мы хотим для нового верхнего или нижнего колонтитула, аналогично тому, как мы видели функцию \PlaceMacro{setupheadertexts}\tex{setupheadertexts} и \PlaceMacro{setupfootertexts}\tex{setupfootertexts}. Как только мы это сделаем, нам нужно связать новый верхний или нижний колонтитул с некоторым конкретным разделом с помощью \type{\setuphead}, используя параметры верхнего и нижнего колонтитула (которые не объясняются в \in{Chapter}[cap:structure]).

Таким образом, в следующем примере верхний колонтитул на первой странице каждой главы будет скрыт, а в нижнем колонтитуле будет отображаться номер страницы по центру:

\starttyping
\definetext[ChapterFirstPage] [footer] [pagenumber]
\setuphead
  [chapter]
  [header=high, footer=ChapterFirstPage]
\stoptyping

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:margintext,
    title=Вставка текстовых элементов по краям и полям страницы,
  ]

Верхний и нижний края, а также правое и левое поля обычно не содержат какого-либо текста. Однако \ConTeXt\ позволяет размещать там некоторые текстовые элементы.
В частности, для этого доступны следующие команды:

\startitemize

\item \PlaceMacro{setuptoptexts}\tex{setuptoptexts}: позволяет нам размещать текст у верхнего края страницы (над областью заголовка).

\item \PlaceMacro{setupbottomtexts}\tex{setupbottomtexts}: позволяет нам размещать текст у нижнего края страницы (под областью нижнего колонтитула).

\item \PlaceMacro{margintext}\tex{margintext},
  \PlaceMacro{atleftmargin}\tex{atleftmargin},
  \PlaceMacro{atrightmargin}\tex{atrightmargin},
  \PlaceMacro{ininner}\tex{ininner},
  \PlaceMacro{ininneredge}\tex{ininneredge},
  \PlaceMacro{ininnermargin}\tex{ininnermargin},
  \PlaceMacro{inleft}\tex{inleft},
  \PlaceMacro{inleftedge}\tex{inleftedge},
  \PlaceMacro{inleftmargin}\tex{inleftmargin},
  \PlaceMacro{inmargin}\tex{inmargin}, \PlaceMacro{inother}\tex{inother},
  \PlaceMacro{inouter}\tex{inouter},
  \PlaceMacro{inouteredge}\tex{inouteredge},
  \PlaceMacro{inoutermargin}\tex{inoutermargin},
  \PlaceMacro{inright}\tex{inright},
  \PlaceMacro{inrightedge}\tex{inrightedge},
  \PlaceMacro{inrightmargin}\tex{inrightmargin}: позволяют размещать текст по боковым краям и полям документа.

\stopitemize

Первые две команды работают точно так же, как \tex{setupheadertexts} и \tex{setupfootertexts}, и формат этих текстов можно даже заранее настроить с помощью \tex{setuptop} и \tex{setupbottom}, подобно тому, как \tex{setupheader} позволяет нам настраивать тексты для \tex{setupheadertexts}. Для всего этого я ссылаюсь на то, что уже сказал в \in{section}[sec:headerfooter]. Единственная небольшая деталь, которую нужно добавить, это то, что текст, настроенный для \tex{setuptoptexts} или \tex{setupbottomtexts}, не будет виден, если в макете страницы не было зарезервировано места для верхнего ({\tt top}) или нижнего ({\tt bottom}) края. Для этого см. \in{section}[sec:setuplayout].

Что касается команд, предназначенных для размещения текста на полях документа, все они имеют похожий синтаксис:

\type{\CommandName[Reference][Configuration]{Text}}

где {\em Reference} и {\em Configuration} -- необязательные аргументы; первый используется для возможных перекрестных ссылок, а второй позволяет нам настроить текст на полях. Последний аргумент, заключенный в фигурные скобки, содержит текст, который нужно разместить на поле.

Из этих команд более общей является \tex{margintext}, поскольку она позволяет размещать текст на любом из полей или боковых краях страницы. Остальные команды, как указывает их название, помещают текст в само поле (правое или левое, внутреннее или внешнее) или край (правое или левое, внутреннее или внешнее). Эти команды тесно связаны с макетом страницы, потому что если, например, мы используем \tex{inrightedge}, но не зарезервировали место в макете страницы для правого края, ничего не будет видно.

Параметры конфигурации для \tex{margintext} следующие:

\startitemize

\item {\tt\bf location}: указывает, на каком поле будет размещен текст. Оно может быть {\tt left}, {\tt right} или, в двусторонних документах, {\tt outer} or {\tt inner}. По умолчанию он {\tt left} в односторонних документах, а в двусторонних -- {\tt outer}.

\item {\tt\bf width}: ширина, доступная для печати текста. По умолчанию будет использоваться вся ширина поля.

\item {\tt\bf margin}: указывает, будет ли текст размещен на самом поле {\tt margin} или по краю {\tt edge}.

\item {\tt\bf align}: выравнивание текста. Здесь используются те же значения, что и в  \in{\tex{setupalign}}[sec:setupalign].

\item {\tt\bf line}: позволяет указать количество строк смещения текста на полях. Итак, {\tt line=1} сместит текст на одну строку ниже, а {\tt line=-1} на одну строку выше.

\item {\tt\bf style}: команда или команды для указания стиля текста, который будет помещен на поля.

\item {\tt\bf color}: цвет текста на полях.

\item {\tt\bf command}: имя команды, которой в качестве аргумента будет передан текст, который будет помещен на поле. Эта команда будет выполнена перед записью текст. Например, если мы хотим нарисовать рамку вокруг текста, мы можем использовать \MyKey{[command=\backslash framed]\{Text\}}.

\stopitemize

Остальные команды допускают те же параметры, за исключением {\tt location} местоположения и {\tt margin} поля. В частности, команды \tex{atrightmargin} и \tex{atleftmargin} помещают текст полностью прикрепленным к основной части страницы. Мы можем установить разделительное пространство с помощью параметра {\tt distance}, о котором я не упоминал, говоря о \tex{margintext}, потому что в своих тестах я не заметил никакого эффекта на эту команду.

\startSmallPrint

В дополнение к указанным выше параметрам эти команды также поддерживают другие параметры ({\tt strut, anchor, method, category, scope, option, hoffset, voffset, dy, bottomspace, threshold и stack}), которые я не упомянул, потому что они не задокументированы \Doubt и откровенно говоря, я не совсем уверен, для чего они нужны. Мы можем угадать те, у кого есть имена вроде {\em distance}, а остальные? В вики упоминается только опция  {\tt stack}, говоря, что она используется для эмуляции команды \marginpars в \LaTeX, но мне это не кажется очень понятным.

\stopSmallPrint

Команда  \PlaceMacro{setupmargindata}\tex{setupmargindata} позволяет нам глобально настраивать тексты на каждом поле. Так, например,

\type{\setupmargindata[right][style=slanted]}

гарантирует, что все тексты в правом поле написаны наклонно.

Мы также можем создать нашу собственную настраиваемую команду с помощью
\PlaceMacro{definemargindata}\type{\definemargindata[Name][Configuration]}

\stopsection

\stopchapter

\stopcomponent

%%% Local Variables:
%%% mode: ConTeXt
%%% mode: auto-fill
%%% coding: utf-8-unix
%%% TeX-master: "../introCTX.mkiv"
%%% End:
%%% vim:set filetype=context tw=72 : %%%
