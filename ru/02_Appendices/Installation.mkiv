%%% File:     Installation.mkiv
%%% Author:       Joaquín Ataz-López
%%% Begun:      May 2020
%%% concluded: May 2020
%%%Содержание: Я подумал, стоит ли включать это приложение. С самого начала мне было ясно, что, если он будет включен, это должно быть приложение, потому что, если я поставлю его в начале, будет труднее привлечь читателя с самого начала. Я не был так увлечен этим, потому что я не хотел объяснять аспекты, связанные с Windows или Apple, которые я действительно не знаю, так как я не использовал первое более 15 лет, а второе - никогда использовал. У меня также было искушение сослаться на текст Пабло Родригеса (гораздо более полный), но, наконец, тот факт, что теперь "официальная" версия стала lmtx, в некотором смысле информация Пабло устарела, поэтому я решил включить приложение , но в очень краткой форме. Поскольку я не могу скомпилировать этот документ с текущей версией LMTX (он хорошо скомпилирован до версии в начале августа), и я читал список рассылки ConTeXt в течение нескольких месяцев, я вижу, что это относительно обычное явление для новая версия LMTX, содержащая ошибку, которую необходимо исправить ... Я решил порекомендовать Standalone.
%%%
%%% Edited with: Emacs + AuTeX - And at times vim + context-plugin
%%%

\environment introCTX_env.mkiv

\setuphead
  [section]
  [sectionsegments=3:3]

\setuphead
  [subsection]
  [sectionsegments=3:4]

\startcomponent c01_Installation.mkiv

\startchapter
  [
    reference=installation_suite,
    title={Установка, настройка и обновление \ConTeXt},
  ]

Основные дистрибутивы \TeX (TeX Live, teTeX, MikTeX, MacTeX и т.д.) включают версию \ConTeXt. Однако это не самая последняя версия. В этом приложении я объясню две процедуры для установки двух разных версий \ConTeXt; первая включает как \ConTeXt\ Mark~II, так и Mark~IV, а вторая включает только \ConTeXt\ Mark~IV.

Процедура установки выполняется одинаково в любой операционной системе; но детали меняются от одной системы к другой. Однако мы можем упростить ситуацию таким образом, что в следующих строках я выделю две большие группы систем:

\startitemize

\item {\bf Unix-type systems:} Это включает в себя сам Unix, а также GNU Linux, Mac OS, FreeBSD, OpenBSD или Solaris. Процедура в основном одинакова во всех этих системах; есть несколько очень маленьких отличий, которые я выделю в соответствующем месте.

\item {\bf Windows systems}, это включает в себя различные версии этой операционной системы: Windows 10 (я думаю, последняя версия), Windows 8, Windows 7, Windows Vista, Windows XP, Windows NT и т.д.
  
\stopitemize

\startSmallPrint

  {\bf Важное примечание о процессе установки в системах Microsoft Windows:}

  \dontleavehmode\ConTeXt, как и все системы \TeX, предназначен для работы с терминала; программы и процедуры установки тоже. В Windows это также вполне возможно и не должно создавать каких-либо серьезных затруднений. Проблема в том, что, с одной стороны, пользователи Windows не всегда привыкли делать это, а с другой, поскольку Windows возникла в {\em иллюзии} (ложной), что все в компьютерной системе может быть выполнено графически, как правило, версии этой операционной системы не слишком много говорят о том, как использовать терминал. Кроме того, каждая версия этой системы обычно меняет имя программы, запускающей терминал, и способ ее открытия. Насколько мне известно, программе эмуляции терминала Windows дано много имен: \quotation{DOS window}, \quotation{Command Prompt}, \quotation {cmd} и т.д. Расположение этой программы в меню приложений Windows также меняется в зависимости от версии Windows, о которой идет речь.

Я перестал использовать системы на базе Windows в 2004 году, поэтому я мало что могу здесь сделать, чтобы помочь читателю. Ему или ей придется самостоятельно выяснить, как открыть терминал в своей конкретной версии операционной системы; что не должно быть слишком сложно.

\stopSmallPrint

\startsection[title=Установка и настройка\\ \suite-]

Дистрибутив \ConTeXt, известный как \quotation{Standalone}, также известный как \quotation{\ConTeXt\ Suite}, представляет собой полный и обновленный дистрибутив \ConTeXt, который загружает необходимые файлы из Интернета, не занимает слишком много места. дискового пространства, его легко обновить, и, прежде всего, --- отсюда и название {\em Standalone} --- содержится в единственном каталоге, который может располагаться в любом месте на жестком диске. На одном компьютере даже может быть несколько версий \ConTeXt, каждая в своем собственном каталоге. Этот дистрибутив включает шрифты, двоичные файлы и документацию, необходимые для запуска \ConTeXt\ Mark~II (что подразумевает механизмы \TeX\ PdfLatex и XeTeX) и \ConTeXt\ Mark~IV (что подразумевает движок LuaTeX).

\startSmallPrint

Для получения информации о \TeX\ {\em движков}, см. \in{section}[sec:engines]; и по \TeX\ движках относительно \ConTeXt, а также к версиям, известным как Mark~II и Mark~IV,  \in{section}[sec:historyctx].

\stopSmallPrint

Ниже объясняется, как установить, запустить, обновить и восстановить \suite- в нашей системе. Приведенные здесь данные и процедуры представляют собой резюме гораздо более обширной информации, содержащейся в  \goto{\ConTeXt\ wiki}[url(https://wiki.contextgarden.net/ConTeXt_Standalone#Unix-like_platforms_.28Linux.2FMacOS_X.2FFreeBSD.2FSolaris.29)], к которому я добавил некоторые дополнительные детали, взятые из викикниги на \goto{wikibooks}[url(https://fr.wikibooks.org/wiki/ConTeXt/Installation)]. Если есть какие-либо проблемы с установкой или если вы хотите расширить какие-либо детали, вам следует напрямую обратиться к любому из них (хотя последнее на французском языке)

\startsubsection[title=Installation]

Установка \suite- означает наличие подключения к Интернету и подразумевает следующие шаги:

\startitemize[n, packed]

\item Создание каталога, в который будет установлен \ConTeXt.

\item Загрузка установочного {\em скрипта} в этот каталог.

\item Запуск этого {\em скрипта} с желаемыми параметрами.

\item Внесение некоторых окончательных корректировок.

\stopitemize

\subsubsubject{Шаг 1: создание установочного каталога}

На самом деле это не имеет ничего общего с \ConTeXt, и мы должны предположить, что каждый пользователь будет знать, как это делать. В системах Windows обычно это делается из файлового менеджера. В системах типа Unix это можно сделать из файлового менеджера или из терминала. Однако важно помнить, что не рекомендуется, чтобы каталог установки содержал пустые места в вашем пути. Я лично также стараюсь избегать использования неанглийских имен каталогов с такими вещами, как гласные с ударением в них.

С этого момента я буду предполагать, что каталог установки в Unix-подобных системах -- \MyKey{\lettertilde/context/}, а в Windows -- \MyKey{C:\backslash Programs\backslash context}.

\subsubsubject{Шаг 2. Загрузите установочный {\em скрипт} в каталог установки.}

Установка {\em script} будет отличаться в зависимости от операционной системы, в которой вы устанавливаете:

\startitemize

\item В Unix-подобных системах его можно загрузить с помощью веб-браузера или из терминала с помощью  \MyKey{wget} или \MyKey{rsync}:

  \starttyping

    wget http://minimals.contextgarden.net/setup/first-setup.sh
    rsync rsync://minimals.contextgarden.net/setup/first-setup.sh
    
  \stoptyping

\item В системах типа Windows, насколько мне известно, нет стандартных инструментов для скачивания с консоли. Это нужно делать с помощью веб-браузера. Адрес загрузки может быть любым из следующих:

    \color [blue] {\goto {\ttx http://minimals.contextgarden.net/setup/context-setup-mswin.zip}[url(http://minimals.contextgarden.net/setup/context-setup-mswin.zip)]\\    \goto{\ttx http://minimals.contextgarden.net/setup/context-setup-win64.zip}[url(http://minimals.contextgarden.net/setup/context-setup-win64.zip)]}

  После загрузки в Windows вы должны распаковать файл,

\stopitemize

\subsubsubject{Step 3: Run the installation {\em script}}

Установочный {\em скрипт} необходимо запускать с терминала. В системах типа Unix имя {\em скрипта} -- \MyKey{first-setup.sh}, и его можно запускать с помощью {\tt bash} или {\tt sh}. В системах типа Windows {\em скрипт} называется \MyKey{first-setup.bat} и запускается путем простого ввода его имени в системную консоль или окно MS-DOS из каталога установки.

Установка {\em скрипта} позволяет использовать следующие параметры:

%По умолчанию при установке {\ em script} устанавливается последняя бета-версия, не включая модули расширения. Но это зависит от параметров установки, которые мы указываем при запуске {\ em script}. Это следующие: \ footnote {Во французском Wikibook, о котором я упоминал в начале приложения, также обсуждаются \ MyKey {- fonts = all} и \ MyKey {- goodies = all}. Contextgarden не упоминает о них, но включение их в команду также не повредит.}

\startitemize

\item {\tt\bf --context}: этот параметр определяет, какая версия \ConTeXt\ будет установлена, будь то самая последняя разрабатываемая версия (\quotation{--context=latest}) или последняя стабильная версия (\quotation{--context=beta}). Значение по умолчанию -- \quotation{beta}.

\item {\tt\bf --engine}: позволяет нам указать, хотим ли мы установить Mark~IV (\quotation{--engine=luatex}, значение по умолчанию) или Mark II.

\item {\tt\bf --modules}: также установите модули расширения \ConTeXt, которые не относятся к дистрибутиву как таковые, но предлагают интересные дополнительные утилиты. Для этого нам нужно указать \quotation{--modules=all}.

\stopitemize

\startSmallPrint

Что касается вариантов установки, я считаю, что информация в вики уже устарела. Там сказано, что для установки только Mark IV вам необходимо явно указать параметр «--engine=luatex» и что параметр «--context=latest» устанавливает последнюю стабильную версию, а не версию для разработки. Однако с середины 2020 года содержимое first-setup.sh изменилось, и, заглянув внутрь, я обнаружил, что для установки самой последней версии вам необходимо явно указать «--context=latest» и что «--engine=luatex "включен по умолчанию.

\stopSmallPrint

Французский Wikibook, о котором я упоминал в начале, добавляет два других возможных варианта к параметрам, которые я только что упомянул (задокументировано в вики ConTEXt): \quotation{--fonts=all} и \quotation{goodies=all}. ConTeXtgarden не упоминает о них, но включение их в команду установки тоже не повредит. Поэтому я бы посоветовал вам запустить скрипт установки со следующими параметрами (в зависимости от того, находимся мы в системе типа Unix или Windows):

\startitemize[packed]\tfx

\item Unix: \type{bash first-setup.sh --context=latest --modules=all --fonts=all --goodies=all}

\item Windows:  \type{first-setup.bat --context=latest --modules=all --fonts=all --goodies=all}

\stopitemize
Это, в зависимости от скорости вашего интернет-соединения, может занять некоторое время, но не слишком много.

\startSmallPrint

\subsubsubject{Configuring a proxy}

Сценарий установки использует rsync для получения необходимых файлов. Итак, если вы находитесь за прокси-сервером, вам необходимо указать его данные для rsync. Самый простой способ установить это - установить переменную RSYNC_PROXY в терминале или в вашем стартовом {\em скрипте} (.bashrc или соответствующий файл для каждой оболочки). Замените имя пользователя, пароль, proxyhost и proxyport на правильную информацию. В системах типа Unix это делается с помощью команды \MyKey{export}, а в системах типа Windows - с помощью команды \MyKey{set}. Например:

\type{export RSYNC_PROXY=username:password@proxyhost:proxyport}

Иногда, когда мы находимся за брандмауэром, порт 873 может быть закрыт для исходящих TCP-соединений. Если порт 22 открыт для ssh-подключений, можно использовать один прием - подключиться к компьютеру где-нибудь за пределами брандмауэра и туннелировать в порт 873 (с помощью программы nc).

\type{export RSYNC_CONNECT_PROG='ssh tunelhost nc %H 873'}

где \ quote {tunnelhost} - это машина за пределами брандмауэра, к которой у нас есть доступ. Конечно, на этой машине должен быть открыт NC и порт 873 для исходящего TCP-соединения.

\stopSmallPrint

После запуска \MyKey{first-setup} в каталоге установки появятся два новых каталога с именами \MyKey{bin} и \MyKey{tex} соответственно.

\subsubsubject{Шаг 4: Окончательные настройки (только в GNU Linux)}

В системах GNU Linux есть много каталогов, в которые можно установить шрифты. Если мы хотим, чтобы \ConTeXt\ использовал эти шрифты, мы должны указать ему, где их найти. Для этого мы должны добавить следующую строку в файл \MyKey{tex/setuptex}, созданный после установки:

{\tfx\type{export OSFONTDIR="~/.fonts:/usr/share/fonts:/usr/share/texmf/fonts/opentype/”}}

с которой загружается переменная среды OSFONTDIR с тремя каталогами, в которых обычно находятся шрифты, установленные в системе

\startSmallPrint

/usr/share/texmf/fonts/ будет там только в том случае, если в нашей операционной системе есть другая установка \TEX\ или других систем на его основе; в этом случае он должен быть включен в путь OSFONTDIR, чтобы мы могли использовать шрифты opentype, которые могли быть включены в такую установку. Если у вас есть какие-либо коммерческие шрифты, которые вы хотите использовать в \ConTeXt, вы должны убедиться, что путь к ним - один из тех, что включены в OSFONTDIR, иначе добавьте путь к этой переменной. Я видел, например, что некоторые шрифты устанавливаются в /usr/local/fonts вместо /usr/share/fonts.
  
\stopSmallPrint

Наконец, может быть хорошей идеей, чтобы \ConTeXt\ сгенерировал базу данных с файлами, необходимыми для выполнения. Это будет сделано путем выполнения следующих трех команд с терминала:

\starttyping
  . ~/context/tex/setuptex
  context --generate
  context --make
\stoptyping

Первая инструкция - это точка (точка). Это сокращение от внутренней команды bash {\tt source}. Мы также можем, конечно, запустить {\em source}, если нам так удобнее.

\stopsubsection

\startsubsection[title=Запуск \suite-]

\suite- был разработан для возможности сосуществования с другими установками \TeX\ систем, что является преимуществом, поскольку позволяет нам иметь несколько разных версий, установленных в одной и той же операционной системе; но для того, чтобы воспользоваться этим преимуществом, важно, чтобы переменные среды, необходимые для запуска \ConTeXt, не устанавливались постоянно, потому что каждый раз, когда мы запускаем терминал для запуска \MyKey{context} из него, нам придется начинать с загрузки эти переменные среды в память. Они содержатся в файле \MyKey{tex/setuptex} (Unix) или \MyKey{tex/setuptex.bat} (Windows). Готово:

\startitemize

\item В системах типа Unix после открытия терминала, в котором мы хотим использовать \MyKey{context}, выполнив любую из следующих двух команд:

  \starttyping
    source ~/context/tex/setuptex
    . ~/context/tex/setuptex
  \stoptyping

(предполагая, что каталог, в котором мы хотим использовать версию \quotation{{\ tt context}}, - это \MyKey{\lettertilde/context}).

\item В системах типа Windows, запустив команду \type{tex\setuptex.bat} из установочного каталога в терминале, из которого мы будем использовать \ConTeXt.

\stopitemize

Если в нашей системе нет другой установки \TeX\ или какой-либо из его производных, мы можем избежать этого, автоматизируя выполнение этого ордера каждый раз при открытии терминала:

\startitemize

\item В Unix-подобных системах это делается путем включения его в файл, содержащий общий терминальный запуск {\em скрипта} (обычно \MyKey{.bashrc}).

 \startSmallPrint

Файл конфигурации терминала зависит от программы {\em shell}, которую терминал использует по умолчанию. Если это {\tt bash} (который наиболее часто используется в системах GNU Linux), то в начале будет прочитан файл {\tt .bashrc}. Оболочки {\tt sh} и {\tt ksh} {\em} используют файл с именем {\tt .profile}, {\tt zsh} использует {\tt .zshenv} и {\tt tcsh} или {\tt csh} читать файл {\tt .cshrc}. Некоторые конкретные реализации могут изменять имена этих файлов, поэтому, например, {\tt .bashrc} иногда называют {\tt .bash_profile}.
    
  \stopSmallPrint

\item В системах типа Windows мы можем создать ярлык на рабочем столе, который запускает cmd.exe, а затем отредактировать его, указав команду для запуска при двойном щелчке по нему:

\starttyping
    C:\WINDOWS\System32\cmd.exe /k C:\Programs\context\tex\setuptex.bat
  \stoptyping

\stopitemize

Другая возможность, если мы не хотим запускать этот сценарий каждый раз, когда мы хотим использовать ConTeXt, или не хотим постоянно устанавливать переменные среды, необходимые для его запуска, - это сделать это из самого текстового редактора, вместо того, чтобы запускать ConTeXt из терминал. Как вы это делаете, зависит от конкретного текстового редактора, который вы используете. Вики ConTeXt предоставляет информацию о том, как настроить различные распространенные редакторы: LEd, Notepad ++, Scite, TeXnicCenter, TeXworks, vim и некоторые другие.

\stopsubsection

\startsubsection
  [title=Обновление версии \suite- или возврат к более ранней версии]

Mark~IV все еще находится в стадии разработки, поэтому \suite- часто обновляется. Чтобы обновить нашу установку, просто повторите процесс: мы загружаем новую версию \MyKey{first-setup.sh} и запускаем ее.

Если по какой-либо причине мы хотим вернуться к предыдущей версии \suite-, просто запустите \MyKey{first-setup} с параметром \MyKey{--context=date}, где {\em date} - это дата, соответствующая версии, которую мы хотим восстановить. Обратите внимание, что дату необходимо вводить в американском формате «месяц-день-год».

Полный список версий \ConTeXt\ и связанных дат можно найти по адресу  \goto{this link}[url(https://minimals.contextgarden.net/current/context/)].

Наконец, имейте в виду, что после переустановки системы, будь то обновление или возврат к предыдущей версии, в системах GNU Linux вам придется снова выполнить шаг 4 установки, который я назвал \quote{Final Adjustments}.

\stopsubsection

\stopsection

\startsection[title=Установка \cap{lmtx}]

Если мы планируем использовать только \ConTeXt\ Mark~IV и хотим компилировать наши проекты не напрямую с LuaTeX, а с LuaMetaTex, упрощенным LuaTeX, который использует меньше системных ресурсов и может работать на {\em менее мощных} системах, вместо этого of \suite-, нам нужно установить LMTX, который является последней версией \ConTeXt. Название является аббревиатурой от названия используемого движка \TeX: LuaMetaTeX. Эта версия была запущена в 2019 году, и примерно с мая 2020 года она является рекомендуемым дистрибутивом по умолчанию \ConTeXt, как предлагается в  \goto{\ConTeXt\ wiki}[url(wiki)].

\startSmallPrint

Текущее развитие LMTX идет интенсивно, и бета-версия может меняться несколько раз в неделю. Более того, некоторые из его разработок временно вызывают некоторую несовместимость с Mark ~ IV, и поэтому, например, пока я пишу эти строки, последняя версия LMTX (4 августа 2020 г.) выдает ошибку при команде \tex{Caps}. Поэтому я бы посоветовал новичкам пока работать с \suite-.

\stopSmallPrint

\startsubsection[title=Сама установка]

Установка очень проста:

\startitemize

\item {\bf Шаг 1:} Выберите каталог, в который вы хотите установить LMTX, и, если необходимо, создайте его. Я предполагаю, что установка выполняется в каталог с именем \quotation{context}, расположенный в нашем пользовательском каталоге.

\item {\bf Шаг 2:} Загрузите (в каталог установки) zip-файл из \goto{\ConTeXt\ wiki}[url(https://wiki.contextgarden.net/Installation)], который соответствует вашей операционной системе и процессору. Это может быть любое из следующих значений:

\page[preference]

  \startitemize[packed]

  \item GNU/Linux
    \startitemize
    \item X86 Processor
      \startitemize
      \item \goto{32 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-linux.zip)].
      \item \goto{64 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-linux-64.zip)].
      \stopitemize
    \item ARM Processor
      \startitemize
      \item \goto{32 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-linux-armhf.zip)].
      \item \goto{64 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-linux-aarch64.zip)].
      \stopitemize
    \stopitemize
  \item Microsoft Windows
    \startitemize
    \item \goto{32 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-mswin.zip)]
    \item \goto{64 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-win64.zip)]
    \stopitemize
  \item Mac OS, \goto{versión de 64 bits}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-osx-64.zip)]
  \item FreeBSD
    \startitemize
    \item \goto{32 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-freebsd.zip)].
    \item \goto{64 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-freebsd-amd64.zip)].
    \stopitemize
  \item OpenBSD6.6
    \startitemize
    \item \goto{32 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-openbsd6.6.zip)].
    \item \goto{64 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-openbsd6.6-amd64.zip)].
    \stopitemize
  \item OpenBSD6.7
    \startitemize
    \item \goto{32 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-openbsd6.7.zip)].
    \item \goto{64 bit version}[url(http://lmtx.pragma-ade.nl/install-lmtx/context-openbsd6.7-amd64.zip)].
    \stopitemize

  \stopitemize

Если вы не знаете, является ли ваша система 32-битной или 64-битной, скорее всего, если ваш компьютер не очень старый, он 64-битный. Если вы не знаете, какой у вас процессор: X86 или ARM, скорее всего, это X86.

\item {\bf Шаг 3:} Разархивируйте файл, загруженный на предыдущем шаге, в каталог установки. Будет создана папка с именем \MyKey{bin} и два файла, один с именем \MyKey{installation.pdf}, который содержит более подробную информацию об установке, а второй файл, который является фактической программой установки, называется \MyKey{install.sh} (в системах типа Unix) или \MyKey{install.bat} (в системах Windows).

\item {\bf Шаг 4:} Запустите программу установки (\MyKey{install.sh} или \MyKey{install.bat}). Требуется подключение к Интернету, поскольку программа установки ищет в Интернете нужные файлы.

  \startitemize

  \item В системах типа Unix программа установки, расположенная в каталоге установки, запускается с терминала либо с помощью {\tt bash}, либо с помощью {\tt sh}. Необязательно иметь права администратора, если каталог установки не находится за пределами каталога \MyKey {home} пользователя.
  
  \item In Windows-type systems, you must open a terminal, move to the installation directory, and from the terminal, run {\tt install.bat}. It is not necessary here either that the installation program is run as a system administrator, but it is recommended that this be done so that symbolic links of the files can be used, thus saving disk space.
    
  \stopitemize

\item {\bf Шаг 5} проинформируйте систему о пути к LMTX:

В системах Windows программа установки генерирует файл с именем \MyKey{setpath.bat}, который обновляет все файлы конфигурации, необходимые для того, чтобы Windows знала, что вы установили LMTX в систему и где вы это сделали. В системах GNU Linux, FreeBSD или Mac OS не создается {\em скрипт}, который автоматизирует задачу, поэтому мы должны включить адрес для двоичных файлов \ConTeXt\ в системную переменную PATH, которую мы получили бы, запустив в терминале, из установки:

{\ttx export PATH="{\em InstallationDir}/tex/texmf-{\em Platform}/bin:"\$PATH}

где {\tt {\em InstallationDir}} - это каталог установки (например, «/home/user/context»), а {\tt texmf - {\em Platform}} будет зависеть от установленной версии LMTX. . Например, при установке в 64-битной системе Linux {\tt texmf-{\em Platform}} будет «texmf-linux-64». Поэтому мы должны запустить следующую команду из терминала:

{\ttx export PATH="/home/user/context/texmf-linux-64/bin:"\$PATH}

Эта команда будет включать LMTX в системный путь только до тех пор, пока терминал, с которого она была запущена, остается открытым. Если мы хотим, чтобы это выполнялось автоматически каждый раз при открытии терминала, мы должны включить эту команду в файл конфигурации программы {\em shell}, используемой по умолчанию в системе. Имя этого файла меняется в зависимости от того, какая это программа {\em shell}: bash, sh, zsh, ksh, tcsh, csh ... В большинстве систем Linux, в которых используется bash, файл называется \MyKey{.bashrc} поэтому мы должны запустить следующую команду из нашего домашнего каталога:

{\ttx echo 'export PATH="/home/user/context/texmf-linux-64/bin:"\$PATH >> .bashrc}

{\bf Важное примечание:} Выполнив этот шаг, мы отключим возможность использования других версий \ConTeXt\ в нашей системе, например, той, которая включена в TeX Live или \quotation{\ConTeXt\ Standalone}. Если мы хотим сделать обе версии совместимыми, предпочтительно использовать процедуру, описанную в \in{section}[sec:alias].

\stopitemize

\stopsubsection

\startsubsection[title=Установка модулей расширения в LMTX]

\ConTeXt\ LMTX не включает процедуру установки или обновления модулей расширения \ConTeXt. Однако в \ConTeXt\ wiki есть {\em script}, который позволяет вам устанавливать и обновлять все модули вместе с остальной частью установки.

Для этого нам нужно скопировать goto{aforementioned {\em script}}[url(https://wiki.contextgarden.net/Modules#ConTeXt_LMTX)], вставить его в текстовый файл, расположенный в основном каталоге установки LMTX. (тот, который содержит {\tt install.sh} или {\tt install.bat}) и запустить его с терминала. Я лично убедился, что это работает в системе GNU Linux. Я не уверен, будет ли он работать в системе Windows, поскольку у меня нет версии этой операционной системы, с которой можно было бы ее проверить.

\stopsubsection

\startsubsection[title=Обновление LMTX]

Обновить LMTX так же просто, как снова запустить программу установки: она сверит установленные файлы с файлами на веб-сервере и обновит их по мере необходимости.

Если веб-сайт, с которого были получены файлы, изменился, нам, очевидно, необходимо также изменить этот адрес в установочном {\em скрипте}; хотя, возможно, проще загрузить новую версию установочных файлов в тот же каталог и извлечь из нее новый \MyKey{install.sh} или \MyKey{install.bat}; или, что еще проще, разархивируйте файл с программой установки и переустановите, не удаляя сначала старые файлы.

\stopsubsection

\startsubsection
  [title={Создание файла, который загружает переменные в память, необходимую для LMTX (только системы GNU / Linux)}]

\suite- содержит, как мы уже знаем, файл (\MyKey{tex/setuptex}), который загружает в память все переменные, необходимые для его запуска, но LMTX не включает подобный файл. Однако мы можем легко создать его сами и сохранить, например, как \MyKey{setuplmtx} в каталоге \MyKey{tex}. Команды, которые мог бы иметь этот файл, были бы следующими:

\starttyping
export PATH="~/context/LMTX/tex/texmf-linux-64/bin:"\$PATH
echo "Adding ~/context/LMTX/tex/texmf-linux-64/bin to PATH"
export TEXROOT="~/context/LMTX/tex"
echo "Setting ~/context/LMTX/tex as TEXROOT"
export OSFONTDIR="~/.fonts:/usr/share/fonts:/usr/share/texmf/fonts/opentype/"
echo "Loading font directories into memory"
alias lmtx="~/context/LMTX/tex/texmf-linux-64/bin/context"
echo "Creating an alias to run lmtx"
\stoptyping%$

При этом, помимо загрузки в память путей и переменных, необходимых для запуска LMTX, мы могли бы включить команду \MyKey{lmtx} как синоним \MyKey{context}.

После создания этого файла, прежде чем мы сможем использовать LMTX, где мы собираемся его использовать, мы должны запустить в терминале следующее:

\type{source ~/context/LMTX/tex/setuplmtx}

все это при условии, что LMTX установлен в \MyKey{~/context/LMTX} и что мы вызвали этот файл
\MyKey{setuplmtx} и сохранил его в \MyKey{~/context/LMTX/tex}.

\startSmallPrint

Вышесказанное - это то, что я делаю, чтобы работать с LMTX так же, как я работал со \suite-. Однако я не исключаю, что в LMTX нет необходимости, например, загружать в память переменную OSFONTDIR, поскольку меня поражает то, что в \ConTeXt\ wiki об этом ничего не говорится.
  
\stopSmallPrint

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:alias,
    title={Использование нескольких версий \ConTeXt\ в одной системе (только для систем типа Unix)}
  ]

Утилита операционной системы под названием {\tt alias} позволяет нам связывать разные имена с разными версиями \ConTeXt. Таким образом, мы можем использовать, например, версию \ConTeXt, включенную в TeX Live и LMTX; или {\em Standalone} версия и LMTX.

Например, если мы храним версии LMTX, загруженные в январе и августе 2020 года в разных каталогах, мы могли бы написать следующие две инструкции в \MyKey{.bashrc} (или эквивалентном файле, который читается по умолчанию при открытии терминала):

\starttyping
alias lmtx-01=”/home/user/context/202001/tex/texmf-linux-64/bin/context”
alias lmtx-08=”/home/user/context/202008/tex/texmf-linux-64/bin/context”
\stoptyping

Эти инструкции свяжут имена {\tt lmtx-01} с версией LMTX, установленной в каталоге \MyKey{context/202001}, а {\tt lmtx-08} -- с версией, установленной в \MyKey{context/202008}.

\stopsection

\stopchapter

\stopcomponent

%%% Local Variables:
%%% mode: ConTeXt
%%% mode: auto-fill
%%% coding: utf-8-unix
%%% TeX-master: "../introCTX.mkiv"
%%% End: